# Configuración Global
nameOverride: ""
fullnameOverride: ""
# Configuración de Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""
  automount: true
# Configuración API
replicaCount: 2
image:
  repository: ssanchez4/api-app
  pullPolicy: Always
  tag: "latest"
imagePullSecrets: []
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  name: "api-service"
  type: ClusterIP
  port: 8000
# Configuración de recursos API
resources:
  limits:
    cpu: 350m
  requests:
    cpu: 50m
# Configuración Autoscaling API
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 80
# Configuración del Frontend
frontend:
  enabled: true
  replicaCount: 2
  image:
    repository: santiagosantafe/tareak8s
    tag: frontend
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      cpu: 350m
    requests:
      cpu: 50m
  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
# Configuración de MongoDB
mongodb:
  enabled: true
  replicaCount: 1
  image:
    repository: mongo
    tag: "6"
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 27017
  persistence:
    enabled: true
    storageSize: 1Gi
    hostPath: "/mnt/data"
    storageClass: ""
    accessModes:
      - ReadWriteOnce
# Configuración del Ingress
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: Prefix
  tls: []
# Variables de entorno globales
env:
  - name: MONGO_URI
    value: "mongodb://mongodb-service:27017"
nodeSelector: {}
tolerations: []
affinity: {}
api:
  image:
    tag: latest
